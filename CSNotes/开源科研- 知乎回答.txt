作者：charles
链接：https://www.zhihu.com/question/401054890/answer/1287099448
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

借鸡下蛋说点看法。我博士三年级的时候，由于许可证/代码速度/扩展性等问题，开始放弃MATLAB。但当时不会Python，因而选择了比较吃力的C++作为替代，并且是在Windows下用宇宙IDE Visual studio开发tight binding的程序。即便使用了C++和Eigen，还是忍受不了在运行端的Linux服务器和开发端的Windows反复横跳并解决兼容问题，开始把日常的工作平台也变成了Ubuntu。每次运行以后还是要切回Windows，利用Origin画图，然后WinEdt写LaTeX格式的论文。实在受不了这种反复重启，加之当时有个题目需要处理大量的能带结构，在四年级开始下定决心自学Python，一年内彻底放弃Origin。由于是边学边用，当年的Python代码质量可想而知。LaTeX环境也从熟悉的winedt和ctex，换成了texlive + texstudio。而且由于当时校园网外网流量巨贵，学会了自己配置成学校自己的Python，Ubuntu和texlive源。一年后，把画示意图的软件从PowerPoint换成了inkscape，画晶体结构图的软件从vesta换成了povray。博后第三个月，完成了最后一个vasp课题后，彻底脱离vasp，转向Quantum Espresso，并开始学习利用make，Git和codeblock来进行开发。开始使用文献管理工具（之前都是用Google scholar代管），被mendeley坑成狗以后，换成了Zotero。至此，基本形成了基于Ubuntu系统的自由软件工具链：写代码用Codeblock和Git修改quantum espresso，编译使用GNU套装。计算结果利用Python处理并画图，配上利用porvay和inkscape画的结构及示意图，在texstudio里面写成论文/做成beamer slides，然后用Zotero搜索插入参考文献。这些软件里，Codeblock，Inkscape和Zotero的学习成本不高，和对应的商业解决方案Visual Studio，Illustrator和Endnote类似。功能上在满足我的需求方面几乎没啥差距，没有出现商业软件能做，但自由软件非常难做甚至做不了的情况。GNU编译器套装，Texstudio和Texlive，实际上比Windows下的解决方案更简单更好用了，可以认为是开箱即用，没有什么学习成本。当然LaTeX本身就需要学习，而且成本不低。Povray，Git和Python，学习成本是很高的。Python在替代origin的过程中，需要各种通过代码调整作图效果。默认设置几乎没法用。为此，我专门写了一个设置图像效果的包来简化这一过程。Povray虽然有Python接口，但直接修改源代码也是不可避免的；而且povray也不是所见即所得的软件，需要反复尝试得到最佳效果(正在考虑日后换到blender)。Git更不用说，基本功能，用起来不难，但想用熟练各种功能不搞出车祸，需要日复一日的学习和练习，至今都不敢说完全掌握。Quantum Espresso的学习难度也是远大于vasp的。即使有了多年vasp经验，qe的输入输出结构（尤其是临时文件）和并行分配方式，先开始可以说是一头雾水，直到我通读qe代码后才逐渐理解的。学习这些工具的代价很惨重，但回报也是明显的：现在的工作完全不依赖于任何商业软件，并且通过自己写脚本/代码定制使用方式，有时还会给原作者报告bug和提交补丁，从而可以用几个命令避免Windows下各类软件重复点点点的操作。所谓工欲善其事必先利其器，不是一句空话。所谓居安思危，也不是一句空话。被商业软件卡脖子，也要想想自己是不是从一开始就想偷懒。